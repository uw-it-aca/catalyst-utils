# Copyright 2025 UW-IT, University of Washington
# SPDX-License-Identifier: Apache-2.0


# Generated by Django 2.2.24 on 2021-12-02 04:21

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='GroupWrapper',
            fields=[
                ('group_id', models.AutoField(primary_key=True, serialize=False)),
                ('source_key', models.CharField(max_length=255)),
                ('authz_id', models.IntegerField(blank=True, null=True)),
                ('model_package', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'GroupWrapper',
                # 'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('person_id', models.AutoField(primary_key=True, serialize=False)),
                ('login_realm_id', models.IntegerField(blank=True, null=True)),
                ('login_name', models.CharField(max_length=128)),
                ('remote_key', models.CharField(blank=True, max_length=128, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('surname', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('system_name', models.CharField(blank=True, max_length=255, null=True)),
                ('system_surname', models.CharField(blank=True, max_length=255, null=True)),
                ('system_email', models.CharField(blank=True, max_length=255, null=True)),
                ('password', models.CharField(blank=True, max_length=255, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('date_sys_modified', models.DateTimeField(blank=True, null=True)),
                ('password_reset_ticket', models.CharField(blank=True, max_length=32, null=True)),
                ('last_login_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Person',
                # 'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PeopleInCrowd',
            fields=[
                ('crowd_id', models.IntegerField(primary_key=True, serialize=False)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='catalyst_utils.Person')),
            ],
            options={
                'db_table': 'PeopleInCrowd',
                # 'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RoleImplementation',
            fields=[
                ('role_implementation_id', models.AutoField(primary_key=True, serialize=False)),
                ('role_id', models.IntegerField()),
                ('object_auth_id', models.IntegerField()),
            ],
            options={
                'db_table': 'RoleImplementation',
                # 'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Gradebook',
            fields=[
                ('gradebook_id', models.AutoField(primary_key=True, serialize=False)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='catalyst_utils.Person')),
                ('name', models.TextField(blank=True, null=True)),
                ('authz_id', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('modification_date', models.DateTimeField(auto_now=True)),
                ('last_init_date', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(null=True)),
                ('calculate_total_scores', models.BooleanField(null=True)),
                ('calculate_class_grades', models.BooleanField(null=True)),
                ('total_score_id', models.IntegerField(blank=True, null=True)),
                ('class_grade_id', models.IntegerField(blank=True, null=True)),
                ('count_blanks', models.BooleanField(null=True)),
                ('lowest_conversion_range_grade', models.TextField(blank=True, null=True)),
                ('include_dropped_in_stats', models.BooleanField(null=True)),
            ],
            options={
                'db_table': 'GradeBook',
                # 'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Survey',
            fields=[
                ('survey_id', models.AutoField(primary_key=True, serialize=False)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='catalyst_utils.Person')),
                ('is_quiz', models.BooleanField(null=True)),
                ('is_deleted', models.BooleanField(null=True)),
                ('title', models.CharField(max_length=255)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('modification_date', models.DateTimeField(auto_now=True)),
                ('display_screen_title', models.BooleanField(null=True)),
                ('screen_title', models.CharField(blank=True, max_length=255, null=True)),
                ('display_screen_subtitle', models.BooleanField(null=True)),
                ('screen_subtitle', models.CharField(blank=True, max_length=255, null=True)),
                ('display_screen_name', models.BooleanField(null=True)),
                ('screen_name', models.CharField(blank=True, max_length=255, null=True)),
                ('display_screen_email', models.BooleanField(null=True)),
                ('screen_email', models.CharField(blank=True, max_length=255, null=True)),
                ('display_confirmation_code', models.BooleanField(null=True)),
                ('display_closing_content', models.BooleanField(null=True)),
                ('closing_content', models.TextField(blank=True, null=True)),
                ('auto_number', models.BooleanField(null=True)),
                ('auto_number_type_id', models.IntegerField(blank=True, null=True)),
                ('auto_number_format_id', models.IntegerField(blank=True, null=True)),
                ('auto_number_prefix', models.CharField(blank=True, max_length=255, null=True)),
                ('send_notification', models.BooleanField(null=True)),
                ('announcement_subject', models.TextField(blank=True, null=True)),
                ('announcement_body', models.TextField(blank=True, null=True)),
                ('announcement_sent', models.DateTimeField(blank=True, null=True)),
                ('reminder_subject', models.TextField(blank=True, null=True)),
                ('reminder_body', models.TextField(blank=True, null=True)),
                ('reminder_sent', models.DateTimeField(blank=True, null=True)),
                ('send_announcement', models.BooleanField(null=True)),
                ('send_reminder', models.BooleanField(null=True)),
                ('reminder_date', models.DateTimeField(blank=True, null=True)),
                ('announcement_date', models.DateTimeField(blank=True, null=True)),
                ('has_time_limit', models.BooleanField(null=True)),
                ('time_limit_hour', models.CharField(blank=True, max_length=5, null=True)),
                ('time_limit_min', models.CharField(blank=True, max_length=5, null=True)),
                ('time_limit', models.IntegerField(blank=True, null=True)),
                ('reminder_frequency_id', models.IntegerField(blank=True, null=True)),
                ('tags_match_email', models.BooleanField(null=True)),
                ('requires_notification', models.DateTimeField(blank=True, null=True)),
                ('account_copy_sender', models.IntegerField(blank=True, null=True)),
                ('account_copy_reciever', models.IntegerField(blank=True, null=True)),
                ('account_copy_date', models.DateTimeField(blank=True, null=True)),
                ('origin_survey_id', models.IntegerField(blank=True, null=True)),
                ('rejected_survey_copy', models.BooleanField(null=True)),
                ('copied_questions', models.BooleanField(null=True)),
                ('copied_security', models.BooleanField(null=True)),
                ('copied_announcements', models.BooleanField(null=True)),
                ('copied_reminders', models.BooleanField(null=True)),
                ('copied_participant_experience', models.BooleanField(null=True)),
                ('copied_appearance', models.BooleanField(null=True)),
                ('copied_custom_name', models.BooleanField(null=True)),
                ('copied_notification', models.BooleanField(null=True)),
                ('notification_copied_settings', models.BooleanField(null=True)),
                ('object_auth_id', models.IntegerField(blank=True, null=True)),
                ('allows_backtracking', models.BooleanField(null=True)),
                ('allows_saveforlater', models.BooleanField(null=True)),
                ('allows_confirm_responses', models.BooleanField(null=True)),
                ('allows_modifying_finished', models.BooleanField(null=True)),
                ('allows_multiple_submissions', models.BooleanField(null=True)),
                ('display_results_summary', models.BooleanField(null=True)),
                ('display_results_summary_questions', models.BooleanField(null=True)),
                ('display_results_summary_score', models.BooleanField(null=True)),
                ('display_results_summary_feedback', models.BooleanField(null=True)),
                ('display_results_summary_correct_answer', models.BooleanField(null=True)),
                ('display_results_summary_total_score', models.BooleanField(null=True)),
                ('display_results_summary_stats', models.BooleanField(null=True)),
                ('display_results_summary_while_published', models.BooleanField(null=True)),
                ('display_results_summary_custom_interval', models.BooleanField(null=True)),
                ('display_results_summary_interval_length', models.BooleanField(null=True)),
                ('display_results_summary_interval_scale', models.CharField(blank=True, max_length=3, null=True)),
                ('is_research_confidential', models.BooleanField(null=True)),
                ('is_research_anonymous', models.BooleanField(null=True)),
                ('publish_date', models.DateTimeField(blank=True, null=True)),
                ('unpublish_date', models.DateTimeField(blank=True, null=True)),
                ('security_type', models.CharField(blank=True, max_length=13, null=True)),
                ('in_conversion', models.BooleanField(null=True)),
                ('copied_skip_logic', models.BooleanField(null=True)),
            ],
            options={
                'db_table': 'Survey',
                # 'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PersonAttr',
            fields=[
                ('person', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='catalyst_utils.Person')),
                ('is_person', models.BooleanField(null=True)),
                ('is_current', models.BooleanField(null=True)),
                ('preferred_name', models.CharField(blank=True, max_length=255, null=True)),
                ('preferred_surname', models.CharField(blank=True, max_length=255, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='PersonGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_id', models.CharField(max_length=255)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='catalyst_utils.Person')),
            ],
        ),
        migrations.AddIndex(
            model_name='persongroup',
            index=models.Index(fields=['group_id'], name='group_id_idx'),
        ),
    ]
